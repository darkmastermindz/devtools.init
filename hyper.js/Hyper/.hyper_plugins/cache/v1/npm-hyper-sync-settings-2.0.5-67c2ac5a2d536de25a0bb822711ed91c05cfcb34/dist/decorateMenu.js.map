{"version":3,"sources":["../src/decorateMenu.js"],"names":["open","menu","checkAndCallback","callback","commandsAndConfig","commands","checkForUpdates","app","config","getConfig","syncSettings","accelerators","syncSettingsAccelerators","possibleAccelerators","reduce","allAccelerators","nextKey","accelerator","map","item","label","submenu","type","click","tryToBackup","backupSettings","tryToRestore","restoreSettings","window","url","gistUrl","openGist","paths","dirs","repo","openRepo","files","openConfiguration"],"mappings":";;;;;;;;;;AAAA;;AACA;;;;AACA;;;;kBAEe,CAACA,IAAD,EAAOC,OAAO,EAAd,KAAqB;AAClC,QAAMC,mBAAmBC,YAAY,MAAM;AACzC,UAAMC,oBAAoB,uCAAwBJ,IAAxB,CAA1B;AACA,QAAII,sBAAsB,KAA1B,EAAiC;AACjCD,aAASC,iBAAT;AACD,GAJD;;AAMAF,mBAAiB,CAAC,EAAEG,QAAF,EAAD,KAAkBA,SAASC,eAAT,EAAnC;;AAPkC,aASsBC,cAAIC,MAAJ,CAAWC,SAAX,GAAuBC,YAAvB,IAAuC,EAT7D;AAAA,+BAS1BC,YAT0B;;AAAA,QASZC,wBATY,qCASe,EATf;;AAUlC,QAAMD,eAAeE,gCAAqBC,MAArB,CACnB,CAACC,eAAD,EAAkBC,OAAlB,KAA8B;AAC5B,UAAMC,cAAcL,yBAAyBI,OAAzB,CAApB;AACA,sCACKD,eADL;AAEE,OAACC,OAAD,GAAWC,cAAc,EAAEA,WAAF,EAAd,GAAgC;AAF7C;AAID,GAPkB,EAQnB,EARmB,CAArB;;AAWA,SAAOhB,KAAKiB,GAAL,CACLC,QAAQ;AACN,QAAIA,KAAKC,KAAL,KAAe,SAAnB,EAA8B,OAAOD,IAAP;AAC9B,sCACKA,IADL;AAEEE,eAAS,CACP,GAAGF,KAAKE,OADD,EAEP;AACED,eAAO,eADT;AAEEE,cAAM,SAFR;AAGED,iBAAS;AAELD,iBAAO,mBAFF;AAGLG,iBAAOrB,iBAAiB,CAAC,EAAEG,QAAF,EAAD,KAAkBA,SAASC,eAAT,EAAnC;AAHF,WAIFK,aAAaL,eAJX;AAOLc,iBAAO,iBAPF;AAQLG,iBAAOrB,iBAAiB,CAAC,EAAEG,QAAF,EAAD,KAAkBA,SAASmB,WAAT,EAAnC;AARF,WASFb,aAAac,cATX;AAYLL,iBAAO,kBAZF;AAaLG,iBAAOrB,iBAAiB,CAAC,EAAEG,QAAF,EAAD,KAAkBA,SAASqB,YAAT,EAAnC;AAbF,WAcFf,aAAagB,eAdX,GAgBP;AACEP,iBAAO,MADT;AAEEE,gBAAM,SAFR;AAGED,mBAAS;AAELD,mBAAO,MAFF;AAGLG,mBAAOrB,iBACL,CAAC,EAAEM,MAAF,EAAD,KAAgBR,KAAK4B,MAAL,CAAYpB,SAASA,OAAOqB,GAAhB,GAAsBC,kBAAlC,CADX;AAHF,aAMFnB,aAAaoB,QANX;AASLX,mBAAO,MATF;AAULG,mBAAO,MAAMvB,KAAKmB,IAAL,CAAUa,iBAAMC,IAAN,CAAWC,IAArB;AAVR,aAWFvB,aAAawB,QAXX;AAcLf,mBAAO,eAdF;AAeLG,mBAAO,MAAMvB,KAAKmB,IAAL,CAAUa,iBAAMI,KAAN,CAAY5B,MAAtB;AAfR,aAgBFG,aAAa0B,iBAhBX;AAHX,SAhBO;AAHX,OAFO;AAFX;AAkDD,GArDI,CAAP;AAuDD,C","file":"decorateMenu.js","sourcesContent":["import { app } from 'electron';\nimport checkForMissingSettings from './lib/checkForMissingSettings';\nimport { gistUrl, paths, possibleAccelerators } from './constants';\n\nexport default (open, menu = []) => {\n  const checkAndCallback = callback => () => {\n    const commandsAndConfig = checkForMissingSettings(open);\n    if (commandsAndConfig === false) return;\n    callback(commandsAndConfig);\n  };\n\n  checkAndCallback(({ commands }) => commands.checkForUpdates());\n\n  const { accelerators: syncSettingsAccelerators = {} } = app.config.getConfig().syncSettings || {};\n  const accelerators = possibleAccelerators.reduce(\n    (allAccelerators, nextKey) => {\n      const accelerator = syncSettingsAccelerators[nextKey];\n      return {\n        ...allAccelerators,\n        [nextKey]: accelerator ? { accelerator } : {},\n      };\n    },\n    {},\n  );\n\n  return menu.map(\n    item => {\n      if (item.label !== 'Plugins') return item;\n      return {\n        ...item,\n        submenu: [\n          ...item.submenu,\n          {\n            label: 'Sync Settings',\n            type: 'submenu',\n            submenu: [\n              {\n                label: 'Check for Updates',\n                click: checkAndCallback(({ commands }) => commands.checkForUpdates()),\n                ...accelerators.checkForUpdates,\n              },\n              {\n                label: 'Backup Settings',\n                click: checkAndCallback(({ commands }) => commands.tryToBackup()),\n                ...accelerators.backupSettings,\n              },\n              {\n                label: 'Restore Settings',\n                click: checkAndCallback(({ commands }) => commands.tryToRestore()),\n                ...accelerators.restoreSettings,\n              },\n              {\n                label: 'Open',\n                type: 'submenu',\n                submenu: [\n                  {\n                    label: 'Gist',\n                    click: checkAndCallback(\n                      ({ config }) => open.window(config ? config.url : gistUrl),\n                    ),\n                    ...accelerators.openGist,\n                  },\n                  {\n                    label: 'Repo',\n                    click: () => open.item(paths.dirs.repo),\n                    ...accelerators.openRepo,\n                  },\n                  {\n                    label: 'Configuration',\n                    click: () => open.item(paths.files.config),\n                    ...accelerators.openConfiguration,\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      };\n    },\n  );\n};\n"]}