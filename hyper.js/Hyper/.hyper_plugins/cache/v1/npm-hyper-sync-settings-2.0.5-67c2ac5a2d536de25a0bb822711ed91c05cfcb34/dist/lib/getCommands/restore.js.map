{"version":3,"sources":["../../../src/lib/getCommands/restore.js"],"names":["paths","files","restoreFile","restore","backupFile","backup","repoPromise","dirs","repo","fetch","mergeFromTo","then","resolve","fs","ensureFileAsync","outputFileAsync","readFileAsync","flag"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;;;mBAOIA,gB,CAJFC,K;MACWC,W,gBAATC,O;MACQC,U,gBAARC,M;;;6CAIW,WAAO,EAAEC,WAAF,EAAP,EAA2B;AACxC,UAAMA,WAAN;AACA,UAAM,sBACJ;AAAA,aACE,yBAAUN,iBAAMO,IAAN,CAAWC,IAArB,EACGC,KADH,GAEGC,WAFH,CAEe,eAFf,EAEgC,QAFhC,EAGGC,IAHH,CAGQC,OAHR,CADF;AAAA,KADI,CAAN;AAQA,UAAMC,aAAGC,eAAH,CAAmBZ,WAAnB,CAAN;AACA,UAAMW,aAAGE,eAAH,CAAmBb,WAAnB,GACJ,MAAMW,aAAGG,aAAH,CAAiBZ,UAAjB,CADF,GACgC,EAAEa,MAAM,IAAR,EADhC,CAAN;AAED,G","file":"restore.js","sourcesContent":["import simpleGit from 'simple-git';\nimport { paths } from '../../constants';\nimport fs from '../fs';\n\nconst {\n  files: {\n    restore: restoreFile,\n    backup: backupFile,\n  },\n} = paths;\n\nexport default async ({ repoPromise }) => {\n  await repoPromise;\n  await new Promise(\n    resolve => (\n      simpleGit(paths.dirs.repo)\n        .fetch()\n        .mergeFromTo('origin/master', 'master')\n        .then(resolve)\n    ),\n  );\n  await fs.ensureFileAsync(restoreFile);\n  await fs.outputFileAsync(restoreFile,\n    await fs.readFileAsync(backupFile), { flag: 'r+' });\n};\n"]}